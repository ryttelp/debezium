apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nifi
spec:
  serviceName: nifi-headless
  replicas: 1
  selector:
    matchLabels:
      app: nifi
  template:
    metadata:
      labels:
        app: nifi
    spec:
      initContainers:
      - name: init-conf
        image: quay.io/p_ryttel/nifi:1.23.2
        command: ['sh', '-c', 'cp -n /opt/nifi/nifi-current/conf/* /mnt/conf/']
        volumeMounts:
          - name: conf
            mountPath: /mnt/conf

      containers:
      - name: nifi
        image: quay.io/p_ryttel/nifi:1.23.2
        imagePullPolicy: Always
        env:  
            - name: NIFI_WEB_HTTP_PORT
              value: "8080"
            # - name: NIFI_WEB_HTTPS_HOST
            #   value: ""            
            # - name: NIFI_WEB_HTTPS_PORT
            #   value: ""
            # - name: SINGLE_USER_CREDENTIALS_USERNAME
            #   value: "nifi"
            # - name: SINGLE_USER_CREDENTIALS_USERNAME
            #   value: "nifipassword"
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8443
          name: https
        - containerPort: 6007
          name: cluster
        volumeMounts:
        - name: content-repository        
          mountPath: /opt/nifi/nifi-current/content_repository
        - name: conf
          mountPath: /opt/nifi/nifi-current/conf
        - name: flowfile-repository
          mountPath: /opt/nifi/nifi-current/flowfile_repository
        - name: provenance-repository
          mountPath: /opt/nifi/nifi-current/provenance_repository
        - name: database-repository
          mountPath: /opt/nifi/nifi-current/database_repository
        - name: state
          mountPath: /opt/nifi/nifi-current/state
        - name: logs
          mountPath: /opt/nifi/nifi-current/logs
  volumeClaimTemplates:
  - metadata:
      name: conf
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi    
  - metadata:
      name: content-repository
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi    
  - metadata:
      name: flowfile-repository
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi                      
  - metadata:
      name: provenance-repository
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi           
  - metadata:
      name: database-repository
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi         
  - metadata:
      name: state
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi                      
  - metadata:
      name: logs
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi
