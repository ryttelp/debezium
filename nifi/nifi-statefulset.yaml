apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nifi
spec:
  serviceName: nifi-headless
  replicas: 1
  selector:
    matchLabels:
      app: nifi
  template:
    metadata:
      labels:
        app: nifi
    spec:
      containers:
      - name: nifi
        image: apache/nifi:latest
        env:
            - name: NIFI_WEB_HTTP_HOST
              value: "0.0.0.0"            
            - name: NIFI_WEB_HTTPS_PORT
              value: "8443"
 # Ścieżki do własnych keystore/truststore wygenerowanych z odpowiednimi SAN
            - name: NIFI_SECURITY_KEYSTORE
              value: "/opt/nifi/certs/keystore.jks"
            - name: NIFI_SECURITY_KEYSTORE_TYPE
              value: "JKS"
            - name: NIFI_SECURITY_KEYSTORE_PASSWD
              valueFrom:
                secretKeyRef:
                  name: nifi-tls-secret
                  key: keystore-password
            - name: NIFI_SECURITY_TRUSTSTORE
              value: "/opt/nifi/certs/truststore.jks"
            - name: NIFI_SECURITY_TRUSTSTORE_TYPE
              value: "JKS"
            - name: NIFI_SECURITY_TRUSTSTORE_PASSWD
              valueFrom:
                secretKeyRef:
                  name: nifi-tls-secret
                  key: truststore-password
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8443
          name: https
        - containerPort: 6007
          name: cluster
        volumeMounts:
        - name: data
          mountPath: /opt/nifi/nifi-current/data
        - name: logs
          mountPath: /opt/nifi/nifi-current/logs
        - name: nifi-certs
          mountPath: /opt/nifi/certs
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi            
  - metadata:
      name: logs
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi