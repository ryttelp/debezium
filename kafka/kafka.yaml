apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka-headless
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - env:
        - name: KAFKA_CFG_PROCESS_ROLES
          value: broker,controller
        - name: KAFKA_CFG_NODE_ID
          value: "0"
        - name: KAFKA_CFG_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        - name: ALLOW_PLAINTEXT_LISTENER
          value: "yes"
        - name: KAFKA_CFG_LISTENERS
          value: INTERNAL://:9092,EXTERNAL://:32257,CONTROLLER://:9093
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: INTERNAL://kafka:9092,EXTERNAL://192.168.101.175:32257
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
        - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
          value: CONTROLLER
        - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
          value: INTERNAL
        - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
        - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
          value: 0@kafka-0:9093
        - name: KAFKA_CFG_KRAFT_CLUSTER_ID
          value: LeluwGDzQsyADlcrZrAzEA
        - name: CLUSTER_ID
          value: LeluwGDzQsyADlcrZrAzEA
        - name: KAFKA_ENABLE_KRAFT
          value: "no"
        - name: KAFKA_CFG_CONTROLLER_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_CFG_LOG_DIRS
          value: /bitnami/kafka/data
        - name: KAFKA_CFG_METADATA_LOG_DIR
          value: /bitnami/kafka/kraft-combined-logs
        - name: KAFKA_KRAFT_CLUSTER_ID
          value: abcdefghijklmnopqrstuv
        image: bitnami/kafka:latest
        imagePullPolicy: Always
        name: kafka
        ports:
        - containerPort: 9092
          name: client
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /bitnami/kafka
          name: data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: kafka-pvc
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate